import json


def descr(bot, event):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –æ–ø–∏—Å—ã–≤–∞–µ—Ç —á—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    :param bot:
    :param event:
    :return: text_description
    –º–µ—Ç–æ–¥ send_text –ø—Ä–∏–Ω–∏–º–∞–µ—Ç: chat_id - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ —Å–º—Å
                             –∏ text - —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —É–≤–∏–¥–∏—Ç user
    '''
    text_description = "–Ø –±–æ—Ç –î–∂–æ–Ω ü§ó, –∏ –≤–≤–∏–¥—É –≤–∞—Å –≤ –∫—É—Ä—Å–µ –¥–µ–ª–æüìÑ. –•–æ—Ä–æ—à–µ–≥–æ –î–Ω—è! üòá" \
                       "I'm a bot John ü§ó, and in view of you in the course of the matterüìÑ. Have a good day! üòá"

    bot.send_text(chat_id=event.from_chat, text=text_description)

    startup(bot, event)


def startup(bot, event):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤—è–ª–µ—Ç –≤ —á–∞—Ç —Å–º—Å —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è
    callbackData - –ø–æ–ª–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–º –≤ —Å–æ–±—ã—Ç–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    text = first_message_text ‚Äî —Å—Ç—Ä–æ–∫–∞, —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    inline_keyboard_markup = –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π markup –≤ —Ñ–æ—Ä–º–∞—Ç–µ json
    '''
    markup = [
        [{"text": "üá∑üá∫ –†—É—Å—Å–∫–∏–π", "callbackData": "ru"},
         {"text": "üá¨üáß English", "callbackData": "en"}]
    ]
    first_message_text = "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language"

    bot.send_text(chat_id=event.from_chat,
                  text=first_message_text,
                  inline_keyboard_markup=json.dumps(markup))


def ru(bot, event):
    info = [
        [{"text": "üåê –í–∏–∫–∏–ø–µ–¥–∏—è", "url": "https://ru.wikipedia.org/wiki/" },
         {"text": "–°–≤–µ–¥–µ–Ω–∏—è", "callbackData": "ru_data", "style": "attention"},
         {"text": "–ö–æ–Ω—Ç–∞–∫—Ç—ã", "callbackData": "contacts", "style": "primary"}]
    ]

    bot.send_text(chat_id=event.from_chat,
                  text="–°–≤–µ–¥–µ–Ω–∏—è",
                  inline_keyboard_markup=info)


def ru_button_answer(bot, event):
    '''
    —Ñ—É–Ω–∫—Ü–∏—è –æ–ø–∏—Å—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–æ–∫
    answer_callback_query - –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    text - —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏
    show_alert - –µ—Å–ª–∏ —Ä–∞–≤–Ω–æ True —Ç–æ —é–∑–µ—Ä —É–≤–∏–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ —á–∞—Ç–µ
    '''
    if event.data['callbackData'] == 'ru_data':
        bot.answer_callback_query(query_id=event.data['queryId'],
                                  text="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ü§ù",
                                  show_alert=False)
    elif event.data['callbackData'] == 'contacts':
        bot.answer_callback_query(query_id=event.data['queryId'],
                                  text='123456789',
                                  show_alert=True)


def ru_data(bot, event):
    bot.send_text(chat_id=event.data['message']['chat']['chatId'],
                  text="—è–∑—ã–∫ –≤–æ—Å—Ç–æ—á–Ω–æ—Å–ª–∞–≤—è–Ω—Å–∫–æ–π –≥—Ä—É–ø–ø—ã —Å–ª–∞–≤—è–Ω—Å–∫–æ–π –≤–µ—Ç–≤–∏ –∏–Ω–¥–æ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–π —è–∑—ã–∫–æ–≤–æ–π —Å–µ–º—å–∏, "
                       "–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫ —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞. –Ø–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –º–∏—Ä–∞")
    ru(bot, event)


def en(bot, event):
    info = [
        [{"text": "üåê Wikipedia", "url": "https://en.wikipedia.org/wiki/English_language"},
         {"text": "Information", "callbackData": "en_data", "style": "attention"},
         {"text": "Contacts", "callbackData": "contacts", "style": "primary"}]
    ]

    bot.send_text(chat_id=event.from_chat,
                  text="Information",
                  inline_keyboard_markup=info)


def en_button_answer(bot, event):
    if event.data['callbackData'] == 'en_data':
        bot.answer_callback_query(query_id=event.data['queryId'],
                                  text="Welcome ü§ù",
                                  show_alert=False)
    elif event.data['callbackData'] == 'contacts':
        bot.answer_callback_query(query_id=event.data['queryId'],
                                  text='123456789',
                                  show_alert=True)


def en_data(bot, event):
    bot.send_text(chat_id=event.data['message']['chat']['chatId'],
                  text="English is a West Germanic language in the Indo-European language family, "
                       "with it's earliest forms spoken by the inhabitants of early medieval England.")
    en(bot, event)